// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using School.Scheduler.Database;

namespace School.Scheduler.Database.Migrations
{
    [DbContext(typeof(ScheduleContext))]
    [Migration("20201222101139_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("School.Scheduler.Database.SchedulerNote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("UserNoteId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserNoteId");

                    b.ToTable("SchedulerNote");
                });

            modelBuilder.Entity("School.Scheduler.Database.TimeCell", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("End")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Order")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Start")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("School.Scheduler.Database.TimeLesson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClassId")
                        .HasColumnType("text");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.Property<string>("TeacherId")
                        .HasColumnType("text");

                    b.Property<string>("TimeId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TimeId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("School.Scheduler.Database.UserNote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("StartUserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserNotes");
                });

            modelBuilder.Entity("School.Scheduler.Database.SchedulerNote", b =>
                {
                    b.HasOne("School.Scheduler.Database.UserNote", null)
                        .WithMany("Notes")
                        .HasForeignKey("UserNoteId");
                });

            modelBuilder.Entity("School.Scheduler.Database.TimeLesson", b =>
                {
                    b.HasOne("School.Scheduler.Database.TimeCell", "Time")
                        .WithMany()
                        .HasForeignKey("TimeId");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("School.Scheduler.Database.UserNote", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
