// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using School.Sheduler.Context;

namespace School.Sheduler.Migrations
{
    [DbContext(typeof(SchedulerContext))]
    [Migration("20210419075955_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("School.Sheduler.Context.Facts.FactLesson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Cabinete")
                        .HasColumnType("text");

                    b.Property<string>("ClassId")
                        .HasColumnType("text");

                    b.Property<string>("LessonId")
                        .HasColumnType("text");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.Property<string>("TeacherId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("School.Sheduler.Context.LogRecord", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Action")
                        .HasColumnType("text");

                    b.Property<string>("From")
                        .HasColumnType("text");

                    b.Property<string>("To")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("School.Sheduler.Context.Rules.ClassRule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ClassId")
                        .HasColumnType("text");

                    b.Property<int>("RuleType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ClassRules");
                });

            modelBuilder.Entity("School.Sheduler.Context.Rules.SubjectRule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("RuleType")
                        .HasColumnType("integer");

                    b.Property<string>("SubjectId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SubjectRules");
                });

            modelBuilder.Entity("School.Sheduler.Context.Rules.TeacherRule", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("RuleType")
                        .HasColumnType("integer");

                    b.Property<string>("TeacherId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TeacherRules");
                });

            modelBuilder.Entity("School.Sheduler.Context.Schedule.ScheduleLesson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.HasKey("Id");

                    b.ToTable("ScheduleLessons");
                });

            modelBuilder.Entity("School.Sheduler.Context.Facts.FactLesson", b =>
                {
                    b.HasOne("School.Sheduler.Context.Schedule.ScheduleLesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.Navigation("Lesson");
                });
#pragma warning restore 612, 618
        }
    }
}
